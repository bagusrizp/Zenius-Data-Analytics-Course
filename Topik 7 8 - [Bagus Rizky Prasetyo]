{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"mount_file_id":"1nvPNOLQOdSAkAVTwXJllZFlaoRpHW6-F","authorship_tag":"ABX9TyMKaq1LAVjxMO+XdOhOL9qo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Data Preparation"],"metadata":{"id":"rBw6IMpNyzEK"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"mjAcPhtJriXy"},"outputs":[],"source":["# Import library pandas\n","\n","import pandas as pd"]},{"cell_type":"code","source":["# Muat dataset\n","\n","df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Eps2-Data-train.csv')"],"metadata":{"id":"Z7Zl5pF2r-N6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Value awal dari dataset titanic. Dapat diketahui bahwa 6 data kategorikal dan\n","# 2 data nominal. Data kategorikal diantaranya adalah Embarked, Parch, SibSp,\n","# Sex, Pclass, dan Survived. Sementara itu, data nominal berisikan Fare dan Age.\n","\n","df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"FgVqN5tPsIxV","executionInfo":{"status":"ok","timestamp":1665915493849,"user_tz":-420,"elapsed":47,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"5b33844d-3683-4251-9f3b-20fb25a3a10c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","5            6         0       3   \n","6            7         0       1   \n","7            8         0       3   \n","8            9         1       3   \n","9           10         1       2   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","5                                   Moran, Mr. James    male   NaN      0   \n","6                            McCarthy, Mr. Timothy J    male  54.0      0   \n","7                     Palsson, Master. Gosta Leonard    male   2.0      3   \n","8  Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)  female  27.0      0   \n","9                Nasser, Mrs. Nicholas (Adele Achem)  female  14.0      1   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  \n","5      0            330877   8.4583   NaN        Q  \n","6      0             17463  51.8625   E46        S  \n","7      1            349909  21.0750   NaN        S  \n","8      2            347742  11.1333   NaN        S  \n","9      0            237736  30.0708   NaN        C  "],"text/html":["\n","  <div id=\"df-e48304b2-5005-436d-875d-2728e7480b07\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Moran, Mr. James</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330877</td>\n","      <td>8.4583</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>McCarthy, Mr. Timothy J</td>\n","      <td>male</td>\n","      <td>54.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>17463</td>\n","      <td>51.8625</td>\n","      <td>E46</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Palsson, Master. Gosta Leonard</td>\n","      <td>male</td>\n","      <td>2.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>349909</td>\n","      <td>21.0750</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)</td>\n","      <td>female</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>347742</td>\n","      <td>11.1333</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Nasser, Mrs. Nicholas (Adele Achem)</td>\n","      <td>female</td>\n","      <td>14.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>237736</td>\n","      <td>30.0708</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e48304b2-5005-436d-875d-2728e7480b07')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e48304b2-5005-436d-875d-2728e7480b07 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e48304b2-5005-436d-875d-2728e7480b07');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#Cek tipe data.\n","\n","df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZxrQv3HpsOOG","executionInfo":{"status":"ok","timestamp":1665915493850,"user_tz":-420,"elapsed":45,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"64642255-3c18-4062-e1a7-224fe59d5325"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId      int64\n","Survived         int64\n","Pclass           int64\n","Name            object\n","Sex             object\n","Age            float64\n","SibSp            int64\n","Parch            int64\n","Ticket          object\n","Fare           float64\n","Cabin           object\n","Embarked        object\n","dtype: object"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# Cek nilai null dalam seluruh atribut. Atribut Cabin akan dihapus. \n","# Hal ini atas pertimbangan terlalu banyak nilai null yang terdapat dalam \n","# atribut tersebut. Terdapat juga nilai null pada Age dan Embarked.\n","# Atribut age akan diisi dengan nilai mean yang dikelompokkan berdasarkan\n","# atribut parch agar lebih presisi. Atribut Embarked nantinya akan menggunakan\n","# method dropna().\n","\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7v6iXZk8M8dA","executionInfo":{"status":"ok","timestamp":1665915493850,"user_tz":-420,"elapsed":38,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"e3900155-9bd7-4853-db5d-cab856c1bf7a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId      0\n","Survived         0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age            177\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             0\n","Cabin          687\n","Embarked         2\n","dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OvjiZ4kUNGSj","executionInfo":{"status":"ok","timestamp":1665915493851,"user_tz":-420,"elapsed":36,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"493b0ee8-5a8b-4507-e68b-a0e11bd26ef7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(891, 12)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Deskripsi awal nilai tiap atribut.\n","\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"KFZzit8veAzo","executionInfo":{"status":"ok","timestamp":1665915493851,"user_tz":-420,"elapsed":32,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"1137e5ee-620f-45fe-d971-29d258ad38e3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       PassengerId    Survived      Pclass         Age       SibSp  \\\n","count   891.000000  891.000000  891.000000  714.000000  891.000000   \n","mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n","std     257.353842    0.486592    0.836071   14.526497    1.102743   \n","min       1.000000    0.000000    1.000000    0.420000    0.000000   \n","25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n","50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n","75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n","max     891.000000    1.000000    3.000000   80.000000    8.000000   \n","\n","            Parch        Fare  \n","count  891.000000  891.000000  \n","mean     0.381594   32.204208  \n","std      0.806057   49.693429  \n","min      0.000000    0.000000  \n","25%      0.000000    7.910400  \n","50%      0.000000   14.454200  \n","75%      0.000000   31.000000  \n","max      6.000000  512.329200  "],"text/html":["\n","  <div id=\"df-97739541-e6a4-4268-85c0-e9407a741a44\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>223.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>446.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97739541-e6a4-4268-85c0-e9407a741a44')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-97739541-e6a4-4268-85c0-e9407a741a44 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-97739541-e6a4-4268-85c0-e9407a741a44');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Penghapusan atribut cabin.\n","\n","df.drop('Cabin', axis=1, inplace=True)"],"metadata":{"id":"2bAqRuUbnUoA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#df['Age'].fillna(value=df['Age'].mean(), inplace=True)"],"metadata":{"id":"8KHtrr_ycL8O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Value unique pada atribut parch.\n","\n","df.Parch.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iPDg5JV_Yp_j","executionInfo":{"status":"ok","timestamp":1665915493852,"user_tz":-420,"elapsed":30,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"b9f4c66a-9cc8-4ba2-c4ea-97281894e08a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 5, 3, 4, 6])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Missing value handling dilakukan dengan cara mengelompokkan umur\n","# berdasarkan parch untuk kemudian dicari rata-ratanya.\n","# Hal ini dilakukan dengan asumsi bahwa apabila nilai parchnya \n","# 0 - 2, maka penumpang tersebut kemungkinan serta anak atau orang tuanya\n","# Apabila lebih dari 2, maka orang tersebut sedang membawa anaknya.\n","\n","df['Age'] = df['Age'].fillna(df.groupby('Parch')['Age'].transform('mean'))"],"metadata":{"id":"zZtL5AOXzhTB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Hasil deskripsi data frame. Terdapat peningkatan nilai mean apabila\n","# dibandingkan dengan sebelum dilakukan missing value handling.\n","\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"CRO-H-6jNGMY","executionInfo":{"status":"ok","timestamp":1665915493854,"user_tz":-420,"elapsed":27,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"320635cd-bd1f-4563-8f3f-fa1d3be2ad6a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       PassengerId    Survived      Pclass         Age       SibSp  \\\n","count   891.000000  891.000000  891.000000  891.000000  891.000000   \n","mean    446.000000    0.383838    2.308642   29.920509    0.523008   \n","std     257.353842    0.486592    0.836071   13.131596    1.102743   \n","min       1.000000    0.000000    1.000000    0.420000    0.000000   \n","25%     223.500000    0.000000    2.000000   22.000000    0.000000   \n","50%     446.000000    0.000000    3.000000   31.000000    0.000000   \n","75%     668.500000    1.000000    3.000000   35.000000    1.000000   \n","max     891.000000    1.000000    3.000000   80.000000    8.000000   \n","\n","            Parch        Fare  \n","count  891.000000  891.000000  \n","mean     0.381594   32.204208  \n","std      0.806057   49.693429  \n","min      0.000000    0.000000  \n","25%      0.000000    7.910400  \n","50%      0.000000   14.454200  \n","75%      0.000000   31.000000  \n","max      6.000000  512.329200  "],"text/html":["\n","  <div id=\"df-fa122bf9-53ac-47b7-9181-41c7bb02ff37\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.920509</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>13.131596</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>223.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>22.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>446.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>31.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>35.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa122bf9-53ac-47b7-9181-41c7bb02ff37')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fa122bf9-53ac-47b7-9181-41c7bb02ff37 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fa122bf9-53ac-47b7-9181-41c7bb02ff37');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Cek ulang jumlah null. Hasilnya terdapat dua buah nilai null dari\n","# atribut Embarked.\n","\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gs0LVCLcd1BA","executionInfo":{"status":"ok","timestamp":1665915493855,"user_tz":-420,"elapsed":27,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"5f870463-671c-46d5-fe14-9e951dc64ff1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId    0\n","Survived       0\n","Pclass         0\n","Name           0\n","Sex            0\n","Age            0\n","SibSp          0\n","Parch          0\n","Ticket         0\n","Fare           0\n","Embarked       2\n","dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# Penggunaan method dropna() dipilih karena sedikitnya jumlah null yang apabila\n","# dihapuskan maka tidak akan berpengaruh banyak terhadap data.\n","\n","df.dropna()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"v9yOmqQRd5Xy","executionInfo":{"status":"ok","timestamp":1665915493855,"user_tz":-420,"elapsed":23,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"a6c8a607-6bb5-4058-e80d-2459f4cf81ab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Survived  Pclass  \\\n","0              1         0       3   \n","1              2         1       1   \n","2              3         1       3   \n","3              4         1       1   \n","4              5         0       3   \n","..           ...       ...     ...   \n","886          887         0       2   \n","887          888         1       1   \n","888          889         0       3   \n","889          890         1       1   \n","890          891         0       3   \n","\n","                                                  Name     Sex        Age  \\\n","0                              Braund, Mr. Owen Harris    male  22.000000   \n","1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.000000   \n","2                               Heikkinen, Miss. Laina  female  26.000000   \n","3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.000000   \n","4                             Allen, Mr. William Henry    male  35.000000   \n","..                                                 ...     ...        ...   \n","886                              Montvila, Rev. Juozas    male  27.000000   \n","887                       Graham, Miss. Margaret Edith  female  19.000000   \n","888           Johnston, Miss. Catherine Helen \"Carrie\"  female  17.216912   \n","889                              Behr, Mr. Karl Howell    male  26.000000   \n","890                                Dooley, Mr. Patrick    male  32.000000   \n","\n","     SibSp  Parch            Ticket     Fare Embarked  \n","0        1      0         A/5 21171   7.2500        S  \n","1        1      0          PC 17599  71.2833        C  \n","2        0      0  STON/O2. 3101282   7.9250        S  \n","3        1      0            113803  53.1000        S  \n","4        0      0            373450   8.0500        S  \n","..     ...    ...               ...      ...      ...  \n","886      0      0            211536  13.0000        S  \n","887      0      0            112053  30.0000        S  \n","888      1      2        W./C. 6607  23.4500        S  \n","889      0      0            111369  30.0000        C  \n","890      0      0            370376   7.7500        Q  \n","\n","[889 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-f2c1f92e-c65c-48ef-8a99-c3bd7672ec28\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>887</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Montvila, Rev. Juozas</td>\n","      <td>male</td>\n","      <td>27.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211536</td>\n","      <td>13.0000</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Graham, Miss. Margaret Edith</td>\n","      <td>female</td>\n","      <td>19.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>112053</td>\n","      <td>30.0000</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>889</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n","      <td>female</td>\n","      <td>17.216912</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>W./C. 6607</td>\n","      <td>23.4500</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>890</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Behr, Mr. Karl Howell</td>\n","      <td>male</td>\n","      <td>26.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>111369</td>\n","      <td>30.0000</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>891</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Dooley, Mr. Patrick</td>\n","      <td>male</td>\n","      <td>32.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>370376</td>\n","      <td>7.7500</td>\n","      <td>Q</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>889 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2c1f92e-c65c-48ef-8a99-c3bd7672ec28')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f2c1f92e-c65c-48ef-8a99-c3bd7672ec28 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f2c1f92e-c65c-48ef-8a99-c3bd7672ec28');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["# Barplot"],"metadata":{"id":"DlEGca-GlemY"}},{"cell_type":"markdown","source":["> Barplot merupakan suatu diagram yang mempresentasikan nilai *central tendency* dari variabel numerik terhadap variabel kategorikal yang digunakan. Nilai yang ditampilkan umumnya merupakan nilai *mean* atau rata-rata. Atribut **Survived** dan **Sex** akan menjadi fokus untuk divisualisasikan dengan variabel **Age** dan **Fare**.\n"],"metadata":{"id":"1YO31qTamvXF"}},{"cell_type":"code","source":["# Import library yang dibutuhkan untuk visualisasi data.\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"CCWOZp1Mltpx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Penentuan data yang akan divisualisasikan:\n","# Rata-rata umur penumpang yang selamat dan tidak selamat berdasarkan\n","# jenis kelamin.\n","\n","sns.barplot(data=df, x='Survived', y='Age', hue='Sex')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"6myM_Yvml2TY","executionInfo":{"status":"ok","timestamp":1665915494913,"user_tz":-420,"elapsed":613,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"4aa8ab62-1ac2-457f-8f38-a3b8f76a3fa4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Tabel untuk memperjelas visualisasi diagram.\n","\n","df[['Age','Survived','Sex']].groupby(['Survived', 'Sex']).mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"GbYAhm2Tq_3a","executionInfo":{"status":"ok","timestamp":1665915494915,"user_tz":-420,"elapsed":20,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"c2d77ec1-ed22-4c4d-d547-7b0d9650ce37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       Age\n","Survived Sex              \n","0        female  25.148093\n","         male    31.570970\n","1        female  29.231552\n","         male    27.853331"],"text/html":["\n","  <div id=\"df-4bb7aa01-6b97-4092-8748-e1355f5f261d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Age</th>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <th>Sex</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">0</th>\n","      <th>female</th>\n","      <td>25.148093</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>31.570970</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">1</th>\n","      <th>female</th>\n","      <td>29.231552</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>27.853331</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4bb7aa01-6b97-4092-8748-e1355f5f261d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4bb7aa01-6b97-4092-8748-e1355f5f261d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4bb7aa01-6b97-4092-8748-e1355f5f261d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Visualisasi yang ditampilkan secara horizontal:\n","# Rata-rata harga tiket penumpang yang selamat dan tidak selamat berdasarkan\n","# jenis kelamin.\n","\n","sns.barplot(data=df, x='Fare', y='Survived', hue='Sex', orient='h')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"Psh_vjl6ecU9","executionInfo":{"status":"ok","timestamp":1665915494916,"user_tz":-420,"elapsed":19,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"917104f6-4c7f-4697-c606-1c93c3e3f6da"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Tabel untuk memperjelas visualisasi diagram.\n","\n","df[['Fare','Survived','Sex']].groupby(['Survived', 'Sex']).mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6Brdrt5nz-el","executionInfo":{"status":"ok","timestamp":1665915494916,"user_tz":-420,"elapsed":17,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"e11fce28-ec9e-447d-ceb6-0c604dc4f6c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      Fare\n","Survived Sex              \n","0        female  23.024385\n","         male    21.960993\n","1        female  51.938573\n","         male    40.821484"],"text/html":["\n","  <div id=\"df-a4a8d955-810f-42e2-95a6-8aed5e8cd949\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Fare</th>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <th>Sex</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">0</th>\n","      <th>female</th>\n","      <td>23.024385</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>21.960993</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">1</th>\n","      <th>female</th>\n","      <td>51.938573</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>40.821484</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4a8d955-810f-42e2-95a6-8aed5e8cd949')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a4a8d955-810f-42e2-95a6-8aed5e8cd949 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a4a8d955-810f-42e2-95a6-8aed5e8cd949');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["# Distplot"],"metadata":{"id":"PnTSJnbI-BdY"}},{"cell_type":"markdown","source":["\n","\n","> Distplot merupakan suatu fungsi untuk menampilkan distribusi data dalam satu variabel (*univariate*) ataupun hubungan antara dua variabel (*bivariate*). Pada fungsi ini terdapat tiga atribut yang akan divisualisasikan, yaitu **Age**, **Pclass**, dan **Embarked**. Tujuannya adalah untuk melihat distribusi umur penumpang pada tiap kelas dan pelabuhan pemberangkatan yang berbeda.\n","\n"],"metadata":{"id":"ICB_nnKY-MK0"}},{"cell_type":"code","source":["# Distribusi umur penumpang pada tiap kelas dan pelabuhan pemberangkatan\n","# yang berbeda. Dapat dilihat bahwa pelabuhan Southhampton memiliki distribusi\n","# data paling tinggi apabila dibandingkan dengan pelabuhan lainnya.\n","\n","sns.displot(data=df, x='Age', hue='Pclass', col='Embarked', kind='hist', multiple='stack')\n","plt.show()"],"metadata":{"id":"jm-zSGwnjIxP","colab":{"base_uri":"https://localhost:8080/","height":369},"executionInfo":{"status":"ok","timestamp":1665915497078,"user_tz":-420,"elapsed":2178,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"9abe153e-e43e-4ad9-841a-cd530e93aecf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1122.38x360 with 3 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Tabel untuk memperjelas visualisasi diagram.\n","\n","df[['Age','Embarked','Pclass']].groupby(['Embarked', 'Pclass']).agg(\n","    {'Age':['mean', 'median', 'min', 'max', 'count']})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"Xy605HnloXjd","executionInfo":{"status":"ok","timestamp":1665915497079,"user_tz":-420,"elapsed":16,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"23c07cfb-aa10-4d97-ecd8-a2ec60b01a2e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       Age                              \n","                      mean     median    min   max count\n","Embarked Pclass                                         \n","C        1       37.270159  35.000000  16.00  71.0    85\n","         2       23.873942  27.000000   1.00  36.0    17\n","         3       24.268029  26.500000   0.42  45.5    66\n","Q        1       38.500000  38.500000  33.00  44.0     2\n","         2       39.726168  32.178503  30.00  57.0     3\n","         3       29.890369  32.178503   2.00  70.5    72\n","S        1       37.197284  35.000000   0.92  80.0   127\n","         2       30.474134  30.000000   0.67  70.0   164\n","         3       26.384038  26.000000   1.00  74.0   353"],"text/html":["\n","  <div id=\"df-ee67534e-b75e-43bb-bc2f-d799497592f7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th colspan=\"5\" halign=\"left\">Age</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th>mean</th>\n","      <th>median</th>\n","      <th>min</th>\n","      <th>max</th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Embarked</th>\n","      <th>Pclass</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">C</th>\n","      <th>1</th>\n","      <td>37.270159</td>\n","      <td>35.000000</td>\n","      <td>16.00</td>\n","      <td>71.0</td>\n","      <td>85</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23.873942</td>\n","      <td>27.000000</td>\n","      <td>1.00</td>\n","      <td>36.0</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>24.268029</td>\n","      <td>26.500000</td>\n","      <td>0.42</td>\n","      <td>45.5</td>\n","      <td>66</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">Q</th>\n","      <th>1</th>\n","      <td>38.500000</td>\n","      <td>38.500000</td>\n","      <td>33.00</td>\n","      <td>44.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>39.726168</td>\n","      <td>32.178503</td>\n","      <td>30.00</td>\n","      <td>57.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>29.890369</td>\n","      <td>32.178503</td>\n","      <td>2.00</td>\n","      <td>70.5</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">S</th>\n","      <th>1</th>\n","      <td>37.197284</td>\n","      <td>35.000000</td>\n","      <td>0.92</td>\n","      <td>80.0</td>\n","      <td>127</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30.474134</td>\n","      <td>30.000000</td>\n","      <td>0.67</td>\n","      <td>70.0</td>\n","      <td>164</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26.384038</td>\n","      <td>26.000000</td>\n","      <td>1.00</td>\n","      <td>74.0</td>\n","      <td>353</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee67534e-b75e-43bb-bc2f-d799497592f7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee67534e-b75e-43bb-bc2f-d799497592f7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee67534e-b75e-43bb-bc2f-d799497592f7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["# Boxplot"],"metadata":{"id":"jYCKLBtXqMPr"}},{"cell_type":"markdown","source":["\n","\n","> Boxplot merupakan fungsi untuk menampilkan distribusi data kuantitatif. Boxplot memungkinkan adanya komparasi antara variabel atau level dari data kategoris dan memperlihatkan kemungkinan adanya *outliers* didalamnya. Pada fungsi ini atribut **Fare** akan divisualisasikan berdasarkan level pada atribut **Pclass** untuk melihat adakah perbedaan harga yang signifikan sehingga teridentifikasi sebagai *outliers*.\n","\n"],"metadata":{"id":"XYtC9BwGKwl3"}},{"cell_type":"code","source":["# Pengubahan jenis atribut Pclass dari int menjadi string untuk memudahkan\n","# visualisasi nantinya.\n","\n","df['Pclass']=df['Pclass'].astype('str')"],"metadata":{"id":"Bmpm_cNc1w9e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Atribut Fare divisualisasikan berdasarkan atribut Pclass. Terdapat beberapa\n","# outliers yang teridentifikasi disetiap levelnya. Apabila dilihat dari polanya,\n","# kemungkinan tersebut dapat terjadi ketika seseorang membeli beberapa tiket\n","# untuk anggota keluarganya.\n","\n","sns.boxplot(data=df, x='Fare', y='Pclass')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"LVKCD9Fj2J41","executionInfo":{"status":"ok","timestamp":1665915497079,"user_tz":-420,"elapsed":14,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"f04fa9a6-75cb-469b-e2ec-0b06d58896fa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f49c4f2fc50>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Scatterplot"],"metadata":{"id":"oW-5Q1dtV6Yf"}},{"cell_type":"markdown","source":["\n","\n","> Scatterplot merupakan suatu fungsi yang digunakan untuk memvisualisasikan hubungan atau korelasi antara dua variabel atau lebih dalam suatu data. Scatterplot pada kali ini akan digunakan untuk memvisualisasikan dan membuktikan apakah semakin tua umur (**Age**), maka semakin murah harga tiket (**Fare**). Penghapusan outliers pada variabel **Fare** dilakukan sebelum visualisasi untuk meningkatkan kualitas data.\n","\n"],"metadata":{"id":"TavgErrT-h04"}},{"cell_type":"code","source":["# Import library.\n","\n","import numpy as np"],"metadata":{"id":"sQC4Ejkw8DUm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Pembuatan fungsi IQR untuk mencari lower bound dan upper bound.\n","\n","def outlier_treatment(datacolumn):\n"," sorted(datacolumn)\n"," Q1,Q3 = np.percentile(datacolumn , [25,75])\n"," IQR = Q3 - Q1\n"," lower_range = Q1 - (1.5 * IQR)\n"," upper_range = Q3 + (1.5 * IQR)\n"," return lower_range,upper_range"],"metadata":{"id":"T2c6L3nB8fXU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Memasukkan atribut Fare kedalam fungsi.\n","\n","lowerbound,upperbound = outlier_treatment(df.Fare)"],"metadata":{"id":"W70cIGkC8iVg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Menampilkan baris yang terindikasi sebagai outliers.\n","\n","df[(df.Fare < lowerbound) | (df.Fare > upperbound)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ZgXWW3my8spk","executionInfo":{"status":"ok","timestamp":1665915498214,"user_tz":-420,"elapsed":1143,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"133b2aef-b168-428a-aa4a-9aa84cebf5bb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Survived Pclass  \\\n","1              2         1      1   \n","27            28         0      1   \n","31            32         1      1   \n","34            35         0      1   \n","52            53         1      1   \n","..           ...       ...    ...   \n","846          847         0      3   \n","849          850         1      1   \n","856          857         1      1   \n","863          864         0      3   \n","879          880         1      1   \n","\n","                                                  Name     Sex        Age  \\\n","1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.000000   \n","27                      Fortune, Mr. Charles Alexander    male  19.000000   \n","31      Spencer, Mrs. William Augustus (Marie Eugenie)  female  32.178503   \n","34                             Meyer, Mr. Edgar Joseph    male  28.000000   \n","52            Harper, Mrs. Henry Sleeper (Myna Haxtun)  female  49.000000   \n","..                                                 ...     ...        ...   \n","846                           Sage, Mr. Douglas Bullen    male  17.216912   \n","849       Goldenberg, Mrs. Samuel L (Edwiga Grabowska)  female  32.178503   \n","856         Wick, Mrs. George Dennick (Mary Hitchcock)  female  45.000000   \n","863                  Sage, Miss. Dorothy Edith \"Dolly\"  female  17.216912   \n","879      Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)  female  56.000000   \n","\n","     SibSp  Parch    Ticket      Fare Embarked  \n","1        1      0  PC 17599   71.2833        C  \n","27       3      2     19950  263.0000        S  \n","31       1      0  PC 17569  146.5208        C  \n","34       1      0  PC 17604   82.1708        C  \n","52       1      0  PC 17572   76.7292        C  \n","..     ...    ...       ...       ...      ...  \n","846      8      2  CA. 2343   69.5500        S  \n","849      1      0     17453   89.1042        C  \n","856      1      1     36928  164.8667        S  \n","863      8      2  CA. 2343   69.5500        S  \n","879      0      1     11767   83.1583        C  \n","\n","[116 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-29c61957-5dc3-463e-89f2-f098a4fb4375\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>28</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Fortune, Mr. Charles Alexander</td>\n","      <td>male</td>\n","      <td>19.000000</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>19950</td>\n","      <td>263.0000</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>32</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Spencer, Mrs. William Augustus (Marie Eugenie)</td>\n","      <td>female</td>\n","      <td>32.178503</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17569</td>\n","      <td>146.5208</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Meyer, Mr. Edgar Joseph</td>\n","      <td>male</td>\n","      <td>28.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17604</td>\n","      <td>82.1708</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>53</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Harper, Mrs. Henry Sleeper (Myna Haxtun)</td>\n","      <td>female</td>\n","      <td>49.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17572</td>\n","      <td>76.7292</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>846</th>\n","      <td>847</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Sage, Mr. Douglas Bullen</td>\n","      <td>male</td>\n","      <td>17.216912</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>CA. 2343</td>\n","      <td>69.5500</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>849</th>\n","      <td>850</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Goldenberg, Mrs. Samuel L (Edwiga Grabowska)</td>\n","      <td>female</td>\n","      <td>32.178503</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>17453</td>\n","      <td>89.1042</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>856</th>\n","      <td>857</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Wick, Mrs. George Dennick (Mary Hitchcock)</td>\n","      <td>female</td>\n","      <td>45.000000</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>36928</td>\n","      <td>164.8667</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>863</th>\n","      <td>864</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Sage, Miss. Dorothy Edith \"Dolly\"</td>\n","      <td>female</td>\n","      <td>17.216912</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>CA. 2343</td>\n","      <td>69.5500</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>879</th>\n","      <td>880</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)</td>\n","      <td>female</td>\n","      <td>56.000000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>11767</td>\n","      <td>83.1583</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>116 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29c61957-5dc3-463e-89f2-f098a4fb4375')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-29c61957-5dc3-463e-89f2-f098a4fb4375 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-29c61957-5dc3-463e-89f2-f098a4fb4375');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["# Menghapus baris yang berisikan outliers.\n","\n","df.drop(df[ (df.Fare > upperbound) | (df.Fare < lowerbound) ].index , inplace=True)"],"metadata":{"id":"w2ulRNnl9Cih"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Atribut Fare dan Age divisualisasikan dengan Sex untuk membandingkan\n","# korelasi antara kedua atribut sebelumnya. Hasil yang didapat menunjukan\n","# bahwa tidak terdapat korelasi antara Fare dan Age baik pada pria maupun\n","# wanita.\n","\n","sns.scatterplot(data=df, x='Fare', y='Age', hue='Sex')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"S09fAJzRWG2v","executionInfo":{"status":"ok","timestamp":1665915498215,"user_tz":-420,"elapsed":25,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"188bd576-fa47-440c-d962-f45186f42c57"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Pie Chart"],"metadata":{"id":"tXlSdqe6CfWE"}},{"cell_type":"markdown","source":["\n","\n","> Pie Chart merupakan representasi proporsional dalam data numerikal pada suatu kolom. Pie Chart seringkali digunakan untuk melihat suatu komposisi dalam sebuah atribut. Kali ini pie chart akan digunakan untuk memvisualisasikan data penumpang selamat berdasarkan tingkat kelasnya. Atribut yang diambil adalah **Survived** dan **Pclass**.\n","\n"],"metadata":{"id":"71rYq8JTCk6v"}},{"cell_type":"code","source":["# Buat dataframe yang berisikan penumpang selamat.\n","\n","ndf = df[(df['Survived']==1)]"],"metadata":{"id":"6N5CzNtyp7qa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Ambil kolom pclass dalam dataframe sebelumnya untuk dipilih menjadi dataframe\n","# baru. Dataframe ini hanya berisikan total penumpang selamat berdasarkan\n","# masing-masing kelas.\n","\n","ndf1 = ndf['Pclass'].value_counts().rename_axis('Class').reset_index(name='Counts')\n","ndf1.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"Hr_V7syiJ65X","executionInfo":{"status":"ok","timestamp":1665915498216,"user_tz":-420,"elapsed":23,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"a8597464-76a5-4852-cffa-1e335baf2112"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Class  Counts\n","0     3     119\n","1     2      87\n","2     1      57"],"text/html":["\n","  <div id=\"df-98ed66af-d214-4f5c-87a8-58b71dabe959\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Class</th>\n","      <th>Counts</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>119</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>57</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98ed66af-d214-4f5c-87a8-58b71dabe959')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-98ed66af-d214-4f5c-87a8-58b71dabe959 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-98ed66af-d214-4f5c-87a8-58b71dabe959');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["# Ubah value numerik yang terdapat pada kolom class menjadi value kategorikal.\n","\n","ndf1['Class']=ndf1.Class.map({'1': 'First Class', '2':'Second Class', '3':'Third Class'})\n","ndf1.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"9HxiiN6O4Nlt","executionInfo":{"status":"ok","timestamp":1665915498217,"user_tz":-420,"elapsed":23,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"09b2f666-23ee-4357-cd26-243d752c11c9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Class  Counts\n","0   Third Class     119\n","1  Second Class      87\n","2   First Class      57"],"text/html":["\n","  <div id=\"df-f842bd48-aabf-41ab-bcef-eee29c2753bd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Class</th>\n","      <th>Counts</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Third Class</td>\n","      <td>119</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Second Class</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>First Class</td>\n","      <td>57</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f842bd48-aabf-41ab-bcef-eee29c2753bd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f842bd48-aabf-41ab-bcef-eee29c2753bd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f842bd48-aabf-41ab-bcef-eee29c2753bd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# Buat explode data.\n","\n","explode = (0.0, 0.0, 0.1)"],"metadata":{"id":"VxjRAzZd5O90"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Buat warna chart dan warna garis bata parameter.\n","\n","colors = ( \"yellow\", \"orange\", \"red\",)\n","wp = { 'linewidth' : 1.5, 'edgecolor' : \"black\" }"],"metadata":{"id":"Zsidm6Wq5gP2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Buat fungsi untuk menampilkan presentase.\n","\n","def func(pct, allvalues):\n","    absolute = int(pct / 100.*np.sum(allvalues))\n","    return \"{:.1f}%\\n({:d})\".format(pct, absolute)"],"metadata":{"id":"XQiYUG8r5mEk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Pembuatan plot pie chart dan narasi yang terdapat didalamnya. Berdasarkan\n","# output yang dihasilkan dapat diketahui bahwa penumpang selamat pada kelas\n","# first class memiliki presentasi terkecil apabila dibandingkan dengan second\n","# class dan third class.\n","\n","fig, ax = plt.subplots(figsize =(10, 7))\n","wedges, texts, autotexts = ax.pie(ndf1['Counts'],\n","                                  autopct = lambda pct: func(pct, ndf1['Counts']),\n","                                  explode = explode,\n","                                  labels = ndf1['Class'],\n","                                  shadow = True,\n","                                  colors = colors,\n","                                  startangle = 90,\n","                                  wedgeprops = wp,\n","                                  textprops = dict(color =\"black\"))\n","ax.legend(wedges, ndf1['Class'],\n","          title ='Class',\n","          loc =\"upper left\",\n","          bbox_to_anchor =(1, 0, 0.5, 1))\n"," \n","plt.setp(autotexts, size = 8, weight =\"bold\")\n","ax.set_title(\"Perbandingan Penumpang Selamat Tiap Kelas\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":427},"id":"KsQKmf1e5rMC","executionInfo":{"status":"ok","timestamp":1665915498218,"user_tz":-420,"elapsed":21,"user":{"displayName":"Bagus Rizky Prasetyo","userId":"11882850620546169176"}},"outputId":"762dec55-8daf-4e82-a857-00dbcd3faf5f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x504 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}